<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5/8BBv7nhmviXrIAAAAASUVORK5CYII=
</value>
  </data>
</root>